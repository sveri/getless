app:
  offf:
    username: "off"
    password: "off"
    url: http://world.openfoodfacts.net/
  jwt:
    secretKey: ${random.value}
  url: http://localhost:8080
  secret: ${random.value}
  user:
    verification: "false"
    root: users/
  email:
    from: sveri80@gmail.com
    support: sveri80@gmail.com
    url: http://localhost:8080
spring:
  thymeleaf:
    mode: HTML5
    cache: false
#  datasource:
#    url: jdbc:postgresql://localhost:5432/foobar
#    username: postgres
#    password: postgres
#    driver-class-name: org.postgresql.Driver
#    jpa:
#      show-sql: "true"
#      hibernate:
#        ddl-auto: none
  mail:
    host: localhost
    default-encoding: UTF-8
  logging:
    file: default.log
    level:
      org:
        springframework:
          jdbc: DEBUG
  data:    
    mongodb:
      database: test
      host: localhost
      port: 27017
#  db:
#    url: mongodb://localhost
#    name: test      
    
#spring.data.mongodb.authentication-database= # Authentication database name.
#spring.data.mongodb.database=test # Database name.
#spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
#spring.data.mongodb.grid-fs-database= # GridFS database name.
#spring.data.mongodb.host=localhost # Mongo server host.
#spring.data.mongodb.password= # Login password of the mongo server.
#spring.data.mongodb.port=27017 # Mongo server port.
#spring.data.mongodb.repositories.enabled=true # Enable Mongo repositories.
#spring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. When set, host and port are ignored.
#spring.data.mongodb.username= # Login user of the mongo server.    
          